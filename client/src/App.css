@import url('https://fonts.googleapis.com/css2?family=Pacifico&display=swap');

.pacifico-regular {
    font-family: "Pacifico", cursive;
    font-weight: 400;
    font-style: normal;
}

/* Basic bs-container styling */
.bs-container {
    width: 100%; /* Full width */
    padding-left: 15px; /* Default padding */
    padding-right: 15px; /* Default padding */
    margin-left: auto; /* Center the bs-container */
    margin-right: auto; /* Center the bs-container */
  }
  
  /* Small screens (max-width: 576px) */
  @media (max-width: 576px) {
    .bs-container {
      max-width: 100%; /* Full width for very small screens */
      padding-left: 10px;
      padding-right: 10px;
    }
    .swiper {
      width: 200px !important;
    }
  }
  
  /* Medium screens (min-width: 577px and max-width: 768px) */
  @media (min-width: 577px) and (max-width: 768px) {
    .bs-container {
      max-width: 540px; /* Custom max-width for medium screens */
    }
    .swiper {
      width: 350px !important;
    }
  }
  
  /* Large screens (min-width: 769px and max-width: 992px) */
  @media (min-width: 769px) and (max-width: 992px) {
    .bs-container {
      max-width: 720px; /* Custom max-width for large screens */
    }
    .swiper {
      width: 500px !important;
    }
  }
  
  /* Extra large screens (min-width: 993px and max-width: 1200px) */
  @media (min-width: 993px) and (max-width: 1200px) {
    .bs-container {
      max-width: 960px; /* Custom max-width for extra large screens */
    }
  }
  
  /* Extra extra large screens (min-width: 1201px) */
  @media (min-width: 1201px) {
    .bs-container {
      max-width: 1140px; /* Max-width for larger screens */
    }
  }
  


  
.swiper {
  width: 340px;
  height: 420px;
}


.swiper-slide {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 18px;
  font-size: 22px;
  font-weight: bold;
  color: #fff;
}
/* Initial state */
.scale-initial {
  transform: scale(0.7);
  opacity: 0.8;
}

/* When in view */
.scale-up {
  transform: scale(1);
  opacity: 1;
}


.react-responsive-modal-modal {
  z-index: 10000; /* Lower than the Toaster */
  /* width: 50%; */
  border-radius: 15px;
}
.input-container {
  position: relative;
  margin: 50px 20px;
  width: 230px;
}

.input-container input , .input-container textarea {
  font-size: 20px;
  width: 100%;
  border: none;
  border-bottom: 2px solid #ccc;
  padding: 5px 0;
  background-color: transparent;
  outline: none;
}

.input-container .label {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
  color: #ccc;
  transition: all 0.3s ease;
  pointer-events: none;
}

.input-container input:focus ~ .label,
.input-container input:valid ~ .label,
.input-container textarea:focus ~ .label,
.input-container textarea:valid ~ .label,
.input-container textarea:not(:placeholder-shown) ~ .label,
.input-container select:focus ~ .label,
.input-container select:valid ~ .label {
  top: -20px;
  font-size: 16px;
  color: #2B9CB8;
  transform: translateY(0%);
}
.input-container .underline {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 2px;
  width: 100%;
  background-color: #2B9CB8;
  transform: scaleX(0);
  transition: all 0.3s ease;
}

.input-container input:focus ~ .underline,
.input-container input:valid ~ .underline ,
.input-container textarea:focus ~ .underline,
.input-container textarea:valid ~ .underline {
  transform: scaleX(1);
}

/* *{
  border: 1px solid red !important;
} */
 /* From Uiverse.io by elijahgummer */ 
.radio {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
  gap: 10px;
}

.radio > input {
  position: absolute;
  appearance: none;
}

.radio > label {
  cursor: pointer;
  font-size: 30px;
  position: relative;
  display: inline-block;
  transition: transform 0.3s ease;
}

.radio > label > svg {
  fill: #666;
  transition: fill 0.3s ease;
}

.radio > label::before,
.radio > label::after {
  content: "";
  position: absolute;
  width: 6px;
  height: 6px;
  background-color: #ff9e0b;
  border-radius: 50%;
  opacity: 0;
  transform: scale(0);
  transition:
    transform 0.4s ease,
    opacity 0.4s ease;
  animation: particle-explosion 1s ease-out;
}

.radio > label::before {
  top: -15px;
  left: 50%;
  transform: translateX(-50%) scale(0);
}

.radio > label::after {
  bottom: -15px;
  left: 50%;
  transform: translateX(-50%) scale(0);
}

.radio > label:hover::before,
.radio > label:hover::after {
  opacity: 1;
  transform: translateX(-50%) scale(1.5);
}

.radio > label:hover {
  transform: scale(1.2);
  animation: pulse 0.6s infinite alternate;
}

/* Star glow and animation on hover */
.radio > label:hover > svg {
  fill: #ff9e0b;
  filter: drop-shadow(0 0 15px rgba(255, 158, 11, 0.9));
  animation: shimmer 1s ease infinite alternate;
}

.radio > input:checked + label > svg {
  fill: #ff9e0b;
  filter: drop-shadow(0 0 15px rgba(255, 158, 11, 0.9));
  animation: pulse 0.8s infinite alternate;
}

.radio > input:checked + label ~ label > svg,
.radio > input:checked + label > svg {
  fill: #ff9e0b; /* Highlight the stars */
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.1);
  }
}

@keyframes particle-explosion {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    opacity: 0;
    transform: scale(0.5);
  }
}

@keyframes shimmer {
  0% {
    filter: drop-shadow(0 0 10px rgba(255, 158, 11, 0.5));
  }
  100% {
    filter: drop-shadow(0 0 20px rgba(255, 158, 11, 1));
  }
}

.radio > input:checked + label:hover,
.radio > input:checked + label:hover ~ label {
  fill: #e58e09;
}

.radio > label:hover,
.radio > label:hover ~ label {
  fill: #ff9e0b;
}

.radio input:checked ~ label svg {
  fill: #ffa723;
}
